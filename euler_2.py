"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

# Function to generate specified number of values in  Fibonacci sequence
# Ref: https://stackoverflow.com/questions/3953749/python-fibonacci-generator
def fib_gen(n):
    a, b = 0, 1
    for _ in range(n):
        yield a
        a, b = b, a+b
    return a,b

# Function to sum the values of all even Fibonacci numbers 4 million or under.
# val = number of Fibonacci values to generate
# max = maximum individual value to sum to.
def fn(val, max):
    fib_lst = list(fib_gen(val))
    fib_temp = []
    for i in fib_lst:
        if i % 2 == 0:
            if i <= max:
                fib_temp.append(i)

    return sum(fib_temp)

if __name__ == "__main__":
    print(fn(100, 4000000))
